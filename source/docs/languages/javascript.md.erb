---
layout: post
title: JavaScript
category: Languages
---

### Setting up a JavaScript project on Semaphore
#
To add your JavaScript project on Semaphore, first you’ll need to create an account.
After that you will be able to add a new project from GitHub, right from your
dashboard.

After you've selected a branch to build and a brief repository analysis,
Semaphore will automatically configure your project for testing.

For example, after analyzing Grunt project, Semaphore will assume that it’s
written in JavaScript and propose commands to install dependencies and run tests.

<img src="/docs/assets/img/languages/javascript/javascript-analysis.png" class="img-responsive">

### Semaphore stack

Semaphore provides support for testing and deploying JavaScript projects via
Node.js. The following Node.js versions are available via [<%= package_name("nvm") %>](<%= package_url("nvm") %>):

<% package_versions("node").each do |version| %>
  - <%= version %>
<% end %>

The Semaphore stack includes:

- [<%= package_name("npm") %>](<%= package_url("npm") %>) (<%= package_version("npm") %>)
- [<%= package_name("grunt") %>](<%= package_url("grunt") %>) (<%= package_version("grunt") %>)
- [<%= package_name("bower") %>](<%= package_url("bower") %>) (<%= package_version("bower") %>)

List of all packages and versions is available on the [supported application stack](/docs/supported-stack.html) page.

### Node.js versions

The version specified in project settings will be set as global before your build commands run. Semaphore uses [<%= package_name("nvm") %>](<%= package_url("nvm") %>) for managing Node.js versions.

Setting Node.js version is performed by the equivalent of the following command:

    nvm use 0.10
